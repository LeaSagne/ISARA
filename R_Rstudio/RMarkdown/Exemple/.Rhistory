install.packages("FactoMineR") #télécharge le package depuis le web
library(FactoMineR) #charge les fonctions du package dans R
install.packages("ade4")
library(ade4)
library(ade4) # Charger la library
data(seconde) # Charger les donn´ees en m´emoire
names(seconde)
dim(seconde)
MUSI <- sample(10:14,22,rep=TRUE)
sexe <- sample(c("H","F"),22,rep=TRUE)
par(mfrow=c(2,5),mar=c(2,2,4,1))
for( i in 1:8){
+ hist(seconde[,i],main=names(seconde)[i],xlab="",ylab="",col="lightgray")
+ rug(seconde[,i])
+ abline(v=mean(seconde[,i]),lty=2,col="red")
+ }
for( i in 1:8){+ hist(seconde[,i],main=names(seconde)[i],xlab="",ylab="",col="lightgray") + rug(seconde[,i]) + abline(v=mean(seconde[,i]),lty=2,col="red")+ }
for( i in 1:8){
for( i in 1:8){
hist(seconde[,i],main=names(seconde)[i],xlab="",ylab="",col="lightgray")
rug(seconde[,i])
abline(v=mean(seconde[,i]),lty=2,col="red")
}
barplot(table(sexe), col="MidnightBlue", main="Sexe")
round(apply(seconde,MARGIN=2,mean),2)
couleur <- ifelse(sexe=="H","blue","red")
symbol <- ifelse(sexe=="H",3,18)
pairs(seconde,lower.panel=panel.smooth,pch=symbol,cex=0.8,col=couleur)
round(cor(seconde),2) # round() permet d'arrondir les valeurs, ici avec 2 d´ecimales
library(FactoMineR)
acpsec <- PCA(seconde,graph=FALSE) # tout est calcul´e ici
barplot(acpsec$eig[,2])
plot.PCA(acpsec)
plot.PCA(acpsec,choix="var")
plot.PCA(acpsec, axes=c(3,4))
plot.PCA(acpsec, axes=c(3,4), choix="var")
library(readxl)
budget_data <- read_excel("6- ISARA/Semestre 6/AFC/budget-data.xls")
View(budget_data)
phos <- read.table("budget-data.csv",header=TRUE,sep=";",row.names=1)
phos <- read.table("budget.csv",header=TRUE,sep=";",row.names=1)
library(readr)
budget_csv <- read_csv("6- ISARA/Semestre 6/AFC/budget.csv.csv")
View(budget_csv)
## 22/10/2012 12:53:58
## VP
## Script AFC - factoMineR
#### Budget
# install.packages("FactoMineR")
library(FactoMineR)
budget <- read.table("budget-data.csv",header=TRUE,sep=";", row.names = 1)
head(budget)
dim(budget)
groupe <- apply(budget, 1, sum)
activ <- apply(budget, 2, sum)
par(mar=c(4,6,2,2))
barplot(sort(groupe),horiz=TRUE,las=2,col="blue")
barplot(sort(activ),horiz=TRUE,las=2,col="red3")
## AFC
cabudget <- CA(budget)
barplot(cabudget$eig[,2])
plot.CA(cabudget)
plot.CA(cabudget,invisible="col")
plot.CA(cabudget,invisible="row")
plot.CA(cabudget,axes=c(1,3))
ctrCp <- cabudget$col$contrib
ctrLp <- cabudget$row$contrib
ctrLp[order(ctrLp[,1]),]
ctrLp[order(ctrLp[,2]),]
ctrLp[order(ctrLp[,3]),]
ctrCp[order(ctrCp[,1]),]
ctrCp[order(ctrCp[,2]),]
ctrCp[order(ctrCp[,3]),]
cahb <- HCPC(cahbudget, graph=FALSE, nb.clust=5)
plot.HCPC(cahb,choice="map",draw.tree=FALSE)
plot.HCPC(cahb,axes=c(1,3),choice="map",draw.tree=FALSE)
##### Contrib et coord
cont <- cahbudget$col$contrib[,4]
coord <- cahbudget$col$coord[,4]
tab <- data.frame(cont, coord)
tab[order(tab[,1]),]
####
datac <- cahb$data.clust
par(mfrow=c(1,4), mar=c(4,3,1,0))
g1 <- datac[datac$clust==1,]
export1 <- apply(g1[,-9],2,sum)
barplot(export1,horiz=TRUE,las=2,col="red3")
g2 <- datac[datac$clust==2,]
export2 <- apply(g2[,-9],2,sum)
barplot(export2,horiz=TRUE,las=2,col="red3")
g3 <- datac[datac$clust==3,]
export3 <- apply(g3[,-9],2,sum)
barplot(export3,horiz=TRUE,las=2,col="red3")
phos <- read.table("budget.csv",header=TRUE,sep=";",row.names=1)
librairy(FactoMiner)
library(FactoMiner)
## 22/10/2012 12:53:58
## VP
## Script AFC - factoMineR
#### Budget
# install.packages("FactoMineR")
library(FactoMineR)
budget <- read.table("budget-data.csv",header=TRUE,sep=";", row.names = 1)
head(budget)
dim(budget)
groupe <- apply(budget, 1, sum)
activ <- apply(budget, 2, sum)
par(mar=c(4,6,2,2))
barplot(sort(groupe),horiz=TRUE,las=2,col="blue")
barplot(sort(activ),horiz=TRUE,las=2,col="red3")
## AFC
cabudget <- CA(budget)
barplot(cabudget$eig[,2])
plot.CA(cabudget)
plot.CA(cabudget,invisible="col")
plot.CA(cabudget,invisible="row")
plot.CA(cabudget,axes=c(1,3))
ctrCp <- cabudget$col$contrib
ctrLp <- cabudget$row$contrib
ctrLp[order(ctrLp[,1]),]
ctrLp[order(ctrLp[,2]),]
ctrLp[order(ctrLp[,3]),]
ctrCp[order(ctrCp[,1]),]
ctrCp[order(ctrCp[,2]),]
ctrCp[order(ctrCp[,3]),]
cahb <- HCPC(cahbudget, graph=FALSE, nb.clust=5)
plot.HCPC(cahb,choice="map",draw.tree=FALSE)
plot.HCPC(cahb,axes=c(1,3),choice="map",draw.tree=FALSE)
##### Contrib et coord
cont <- cahbudget$col$contrib[,4]
coord <- cahbudget$col$coord[,4]
tab <- data.frame(cont, coord)
tab[order(tab[,1]),]
####
datac <- cahb$data.clust
par(mfrow=c(1,4), mar=c(4,3,1,0))
g1 <- datac[datac$clust==1,]
export1 <- apply(g1[,-9],2,sum)
barplot(export1,horiz=TRUE,las=2,col="red3")
g2 <- datac[datac$clust==2,]
export2 <- apply(g2[,-9],2,sum)
barplot(export2,horiz=TRUE,las=2,col="red3")
g3 <- datac[datac$clust==3,]
export3 <- apply(g3[,-9],2,sum)
barplot(export3,horiz=TRUE,las=2,col="red3")
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
library(readr)
budget_csv <- read_csv("6- ISARA/Semestre 6/AFC/budget.csv.csv")
View(budget_csv)
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
budget.data <- read.csv("~/6- ISARA/Semestre 6/AFC/budget-data.csv", sep=";")
View(budget.data)
## 22/10/2012 12:53:58
## VP
## Script AFC - factoMineR
#### Budget
# install.packages("FactoMineR")
library(FactoMineR)
budget <- read.table("budget-data.csv",header=TRUE,sep=";", row.names = 1)
head(budget)
dim(budget)
groupe <- apply(budget, 1, sum)
activ <- apply(budget, 2, sum)
par(mar=c(4,6,2,2))
barplot(sort(groupe),horiz=TRUE,las=2,col="blue")
barplot(sort(activ),horiz=TRUE,las=2,col="red3")
## AFC
cabudget <- CA(budget)
barplot(cabudget$eig[,2])
plot.CA(cabudget)
plot.CA(cabudget,invisible="col")
plot.CA(cabudget,invisible="row")
plot.CA(cabudget,axes=c(1,3))
ctrCp <- cabudget$col$contrib
ctrLp <- cabudget$row$contrib
ctrLp[order(ctrLp[,1]),]
ctrLp[order(ctrLp[,2]),]
ctrLp[order(ctrLp[,3]),]
ctrCp[order(ctrCp[,1]),]
ctrCp[order(ctrCp[,2]),]
ctrCp[order(ctrCp[,3]),]
cahb <- HCPC(cahbudget, graph=FALSE, nb.clust=5)
plot.HCPC(cahb,choice="map",draw.tree=FALSE)
plot.HCPC(cahb,axes=c(1,3),choice="map",draw.tree=FALSE)
##### Contrib et coord
cont <- cahbudget$col$contrib[,4]
coord <- cahbudget$col$coord[,4]
tab <- data.frame(cont, coord)
tab[order(tab[,1]),]
####
datac <- cahb$data.clust
par(mfrow=c(1,4), mar=c(4,3,1,0))
g1 <- datac[datac$clust==1,]
export1 <- apply(g1[,-9],2,sum)
barplot(export1,horiz=TRUE,las=2,col="red3")
g2 <- datac[datac$clust==2,]
export2 <- apply(g2[,-9],2,sum)
barplot(export2,horiz=TRUE,las=2,col="red3")
g3 <- datac[datac$clust==3,]
export3 <- apply(g3[,-9],2,sum)
barplot(export3,horiz=TRUE,las=2,col="red3")
getwd()
setwd("~/ISARA/12_Optionnels D OPEN/R et Rstudio/RMarkdown")
knitr::opts_chunk$set(echo = TRUE)
summary(cars)
When you click the **Knit** button a document will be '<generated> that includes both content as well as the output of any embedded R code chunks within the document. You can embed an R code chunk like this:
help(eval)
sort(unique(covid$Pays))
---
title: "Bulletin Covid"
author: "V. Tolon & V. Payet"
date: "`r format(Sys.time(), '%d %B %Y')`"
output: html_document
---
```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = TRUE)
jj<-30
pays<-"Taïwan"
```
## R Markdown
Nous utilisons ici des données publiques (accès et utilisation libre) et de taille suffisamment restreintes pour être contenues dans un seul fichier de type *.txt* ou *.csv*. Vous pouvez trouver ces données avec un moteur de recherche classique ou sur des sites spécialisés dans la mise à disposition de données publiques.
-  Vous pourrez par exemple aller sur [https://www.data.gouv.fr/fr/](https://www.data.gouv.fr/fr/) puis faire une recherche avec *covid pays monde évolution*. Ouvrez le lien présentant l'évolution de la pandémie du Covid19 dans le monde sur les 30 derniers jours, allez en bas de la page pour cliquer sur le lien *Evolution par jour et par pays (CSV)*, copier l'adresse de l'URL et utilisez la dans l'import :
```{r covid,echo=T, eval=T,collapse=F}
covid<-read.csv2("https://www.data.gouv.fr/fr/datasets/r/f4935ed4-7a88-44e4-8f8a-33910a151d42" ,
header=TRUE, dec=".", sep=";",
skip=7, encoding = "UTF-8")
# Attention nous ne lisons pas les 3 première lignes grâce à skip=3
# Il s'agissait de 3 lignes de présentation des données
# Nous spécifions aussi l'encodage en UTF-8 (gestion des accents)
dim(covid)
covid[1:4, 1:5]
covid$Date<-as.POSIXct(covid$Date,format="%Y-%m-%d")
```
# En `r pays`
## Nb Cas
```{r covid2,echo=F, eval=T,collapse=F}
covidF<-covid[covid$Pays==pays,]
covidF<-covidF[order(covidF$Date),]
Dates <- covidF$Date[-1]
Jours <- 1:length(Dates)
Cases <- diff(covidF$Infections)
plot(Dates,Cases,type="b")
lines(Dates,predict(loess(Cases~Jours)),pch=16,cex=0.5,col="red")
nn<-nrow(covidF)
```
Chute des données et nouveau pic à la suite est du à l'absence de données le samedi et le dimanche et les cas recensé dans le week-end sont ajouté au lundi (ce qui explique le pic).
## Evolution sur `r jj` jours.
```{r covid3,echo=F, eval=T,collapse=F}
covidFB<-covidF[(nn-jj):nn,]
CasesB <- diff(covidFB$Infections)
n1<-CasesB[2:jj]
n0<-CasesB[-length(CasesB)]
taux <- median((n1-n0)/(n0+1))
if (taux>0.01) {evol="augmente"} else if (taux < (-0.01)) {evol="diminue"} else {evol="reste stable"}
```
Le nombre de cas de COVID19 en `r pays` sur `r jj` jours `r evol` avec un taux d'évolution journalier de `r round(taux*100,1)`%.
sort(unique(covid$Pays))
setwd("~/ISARA/12_Optionnels D OPEN/R et Rstudio/Exemple")
---
title: "Rapport Automatisé - Rmarkdown"
author: "V. Tolon & V. Payet"
date: "`r format(Sys.time(), '%d %B %Y')`"
output:
pdf_document:
toc: yes
toc_depth: '4'
html_document:
fig_caption: yes
number_sections: yes
toc: yes
toc_depth: 4
toc_float: yes
bibliography: biblio2.bib
csl: iso690-author-date-fr-no-abstract.csl
---
```{r setup, include=FALSE}
library(knitr)
```
```{r logo, echo=FALSE, out.width = '30%', fig.align = "center",fig.cap="Logo Rmarkdown"}
knitr::include_graphics("rmarkdown.png")
```
&nbsp;
# **Introduction**:
Dans ce rapport nous analyserons  des profils de joueurs offensifs du championnat de France sur la saison 2017-2018.Les analyses seront faites avec R (@R2019).
# **Présentation des données**
Nous transformons les données en fréquence d'évènements par heure de jeu.
```{r import, echo = T}
jouA <- read.csv2("joueurs.csv",header=TRUE,sep=";",row.names=1,encoding = "latin1")
jou1<-jouA[,c(1:2,4:8)]
jou1b<-jou1/(jouA$Minutes.jouees/60)
jou<-data.frame(jou1b,Minutes.jouees=jouA$Minutes.jouees)
jou<-na.omit(jou)
```
## **Les données**
```{r data1, echo = T,eval=T}
names(jou)
dim(jou)
head(round(jou,3),3)
```
Le jeu de donné est complété pour `r nrow(jou)` joueurs et contient  `r ncol(jou)` variables. La fréquence moyenne de buts marqués par heure de jeu et par attaquant est égale à `r round(mean(unlist(jou[,1])),2)` $+/-$ `r round(sd(unlist(jou[,1])),2)`  (moyenne $+/-$ écart type).
# **Une première analyse **
## **Histogrammes**
```{r histo, echo = F,eval=T,fig.height = 6, fig.width = 8, fig.align = "center",fig.cap="Histogrammes"}
Phisto <- function(tableau){
par(mar=c(2,4,4,1))
p <- ncol(tableau)
for( i in 1:p){
hist(tableau[,i],main=names(tableau)[i],xlab="",ylab="Effectif",col="gold")
rug(tableau[,i])
abline(v=mean(tableau[,i]),lty=2,col="red",lwd=2)
}
}
## utilisons la fonctions Phisto()
par(mfrow=c(3,3))
Phisto(jou)
#Reperez les quelques anomalies de distribution qui pourraient vous aider
#? comprendre la suite (ce n'est pas toujours le cas)
```
**Interprétation**: Nous observons que ....................
## **Corrélations**
On peut les représenter comme ceci :
```{r cor2, echo = F,eval=T,fig.height = 4, fig.width = 4, fig.align = "center",fig.cap="Table des corrélations"}
kable(round(cor(jou),3))
```
**Interprétation**: ...........................
# **Analyse en Composante Principale  **
## **Rappels**
Une ACP permet d'analyser simultanément les liens entre de multiples variables quantitatives et d'analyser les positions des individus vis à vis de l'ensemble de ces variables. Elle est basée sur la recherche d'axes principaux indépendants, chacun plus ou moins liés aux variables d'entrées. Pour rappel l’inertie totale se calcul par :
$$I=\sum^N_{i=1}\frac{1}{N}d^2_{(e_i;g)}$$
Avec $d^2_{e_i,g}=\sum^p_{j=1}x^2_{ij}$ = Distance euclidienne au centre de gravité du nuage de point avec des données centrée et normées.
## **Les valeurs propres**
Elles permettent de déterminer la proportion d’inertie expliquée par chacun des axes :
```{r valp, echo = T,eval=F,fig.cap="Valeurs propres",fig.height = 3, fig.width = 4,fig.align="center",}
library(FactoMineR)
PCAs <- PCA(jou,graph=F)
#Choix des axes
par(mfrow=c(1,1),mar=c(4,4,3,3))
barplot(PCAs$eig[,2],ylab="Inertie %",names.arg = paste("Axe",1: nrow(PCAs$eig)),las=2,cex.axis=0.7,cex.lab=0.8)
```
&nbsp;
**Interprétation**:  .......................
## **Le partitionnement**
```{r indiv, echo = T,eval=F,fig.cap="Cercle des corrélations",fig.height =4 , fig.width = 4,fig.align="center"}
#Partitionnement
hcjou<-HCPC(PCAs,graph=F,nb.clust=4,consol = F)
plot(hcjou,choice="tree")
```
&nbsp;
**Interprétation**: Nous observons que    ......
## **Le cercle des corrélations**
```{r circle12, echo = T,eval=F,fig.cap="Nuage des individus",fig.height = 4, fig.width = 4, fig.align = "center"}
plot(PCAs,choix="var")
```
**Interprétation**: Nous observons que l'axe 1 est expliqué par .................
## **Le nuage des individus**
```{r indiv12, echo = T,eval=F,fig.cap="Nuage des individus",fig.height = 5, fig.width = 5, fig.align = "center"}
plot(hcjou,choice="map",draw.tree = F)
```
**Interprétation**: Nous observons que  .................
## **Description des groupes**
```{r groupes, echo = T,eval=F,fig.cap="Nuage des individus",fig.height = 5, fig.width = 5, fig.align = "center"}
lapply(hcjou$desc.var$quanti,function(x) return(round(data.frame(x)[-6],2)))
```
**Interprétation**:
Les groupes sont décrits dans la table suivante :
```{r groupe, echo = F,eval=T}
num<-1:4
nom<-c("A","B","C","D")
desc<-c("Les mauvais joueurs provocateurs","Les mauvais buteurs","Les bons buteurs sans histoire","Les bons buteurs sous pression")
dd<-data.frame(Numero=num,Nom=nom,Description=desc)
kable(dd,row.names=F,caption="Description des groupes",align="c")
```
&nbsp;
# **Conclusions  **
Les joueurs de foot sont vraiment des gens très très forts [@wisloeff1998strength]. Néanmoins nous savons que les performances ne sont pas les mêmes suivant leurs profils [*attaquants* :  @little2003specificity; et *défenseurs* :  @mohr2003match]. Ceci pourrait fortement impacter leurs tactiques sur le terrain même si @wisloeff1998strength suggère qu'au fond tout cela n'est qu'un jeu sans importance.
&nbsp;
# **Références**
*Liens*
<https://www.footballdatabase.eu/fr/>
<https://rstudio.com/wp-content/uploads/2015/02/rmarkdown-cheatsheet.pdf>
<https://bookdown.org/yihui/rmarkdown/>
*Bibliographie*
